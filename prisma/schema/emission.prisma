enum Import {
  BaseEmpreinte
  Manual
}

enum EmissionStatus {
  Archived
  Valid
}

enum SubPost {
  // Energies
  CombustiblesFossiles
  CombustiblesOrganiques
  ReseauxDeChaleurEtDeVapeur
  ReseauxDeFroid
  Electricite

  // AutresEmissionsNonEnergetiques
  Agriculture
  EmissionsLieesAuChangementDAffectationDesSolsCas
  EmissionsLieesALaProductionDeFroid
  EmissionsLieesAuxProcedesIndustriels
  AutresEmissionsNonEnergetiques

  // IntrantsBienEtMatieres
  MetauxPlastiquesEtVerre
  PapiersCartons
  MateriauxDeConstruction
  ProduitsChimiquesEtHydrogene
  NourritureRepasBoissons
  MatiereDestineeAuxEmballages
  AutresIntrants
  BiensEtMatieresEnApprocheMonetaire

  // IntrantsServices
  AchatsDeServices
  UsagesNumeriques
  ServicesEnApprocheMonetaire

  // DechetsDirects
  DechetsDEmballagesEtPlastiques
  DechetsOrganiques
  DechetsOrduresMenageres
  DechetsDangereux
  DechetsBatiments
  DechetsFuitesOuEmissionsNonEnergetiques
  EauxUsees

  //Fret
  FretEntrant
  FretInterne
  FretSortant

  // Deplacements
  DeplacementsDomicileTravail
  DeplacementsDesEmployesDansLeCadreDuTravail
  DeplacementsVisiteurs

  // Immobilisations
  Batiments
  AutresInfrastructures
  Equipements
  Informatique

  // UtilisationEtDependance
  UtilisationEnResponsabilite
  UtilisationEnDependance
  InvestissementsFinanciersRealises

  // FinDeVie
  ConsommationDEnergieEnFinDeVie
  TraitementDesDechetsEnFinDeVie
  FuitesOuEmissionsNonEnergetiques
  TraitementDesEmballagesEnFinDeVie
}

model Emission {
  id            String         @id @default(uuid())
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @default(now()) @map("updated_at")
  emissionParts EmissionPart[]

  importedFrom   Import        @map("imported_from")
  importedId     String?       @map("imported_id")
  organizationId String?       @map("organization_id")
  organization   Organization? @relation(fields: [organizationId], references: [id])

  status   EmissionStatus
  metaData EmissionMetaData[]
  source   String?
  location String?

  incertitude Int?

  reliability                  Int
  technicalRepresentativeness  Int? @map("technical_representativeness")
  geographicRepresentativeness Int? @map("geographic_representativeness")
  temporalRepresentativeness   Int? @map("temporal_representativeness")
  completeness                 Int? @map("completeness")

  totalCo2 Float  @map("total_co2")
  co2f     Float?
  ch4f     Float?
  ch4b     Float?
  n2o      Float?
  co2b     Float?
  sf6      Float?
  hfc      Float?
  pfc      Float?
  otherGES Float? @map("other_ges")
  unit     Unit?

  subPosts            SubPost[]             @map("sub_posts")
  StudyEmissionSource StudyEmissionSource[]

  @@index([organizationId])
  @@index([status])
  @@map("emissions")
}

model EmissionMetaData {
  emission   Emission @relation(fields: [emissionId], references: [id])
  emissionId String   @map("emission_id")
  language   String

  title     String?
  attribute String?
  frontiere String?
  tag       String?
  location  String?
  comment   String?

  @@id([emissionId, language])
  @@map("emission_metadata")
}

model EmissionPart {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  emissionId String                 @map("emission_id")
  emission   Emission               @relation(fields: [emissionId], references: [id])
  metaData   EmissionPartMetaData[]
  type       String

  totalCo2 Float  @map("total_co2")
  co2f     Float?
  ch4f     Float?
  ch4b     Float?
  n2o      Float?
  co2b     Float?
  sf6      Float?
  hfc      Float?
  pfc      Float?
  otherGES Float? @map("other_ges")

  @@map("emission_posts")
}

model EmissionPartMetaData {
  emissionPart   EmissionPart @relation(fields: [emissionPartId], references: [id])
  emissionPartId String       @map("emission_post_id")
  title          String
  language       String

  @@id([emissionPartId, language])
  @@map("emission_post_metadata")
}
