enum Export {
  Beges
  GHGP
  ISO14069
}

enum ControlMode {
  CapitalShare
  Financial
  Operational
}

enum Level {
  Initial
  Standard
  Advanced
}

enum StudyRole {
  Validator
  Editor
  Reader
}

enum StudyResultUnit {
  K // kg (1)
  T // t (1000)
}

enum EmissionSourceCaracterisation {
  Operated
  NotOperated
  OperatedProcedeed
  OperatedFugitive
  NotOperatedSupported
  NotOperatedNotSupported
  Rented
  FinalClient
  Held
  NotHeldSimpleRent
  NotHeldOther
  HeldProcedeed
  HeldFugitive
  NotHeldSupported
  NotHeldNotSupported
  UsedByIntermediary
  LandUse
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model OpeningHours {
  id          String    @id @default(uuid())
  studySite   StudySite @relation(fields: [studySiteId], references: [id])
  studySiteId String    @map("study_site_id")

  isHoliday Boolean   @default(false)
  day       DayOfWeek
  openHour  String?
  closeHour String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("opening_hours")
}

model EmissionSourceTag {
  id String @id @default(uuid())

  name  String
  color String?

  studyId             String                @map("study_id")
  study               Study                 @relation(fields: [studyId], references: [id])
  StudyEmissionSource StudyEmissionSource[] @relation("TagToEmissionSource")

  @@unique([name, studyId])
  @@map("emission_source_tag")
}

model Study {
  id      String  @id @default(uuid())
  oldBCId String? @map("old_bc_id")

  createdById String  @map("created_by_account_id")
  createdBy   Account @relation(fields: [createdById], references: [id])

  name                 String
  isPublic             Boolean         @map("is_public")
  startDate            DateTime        @map("start_date") @db.Date
  endDate              DateTime        @map("end_date") @db.Date
  realizationStartDate DateTime?       @map("realization_start_date") @db.Date
  realizationEndDate   DateTime?       @map("realization_end_date") @db.Date
  level                Level
  resultsUnit          StudyResultUnit @default(T) @map("results_unit")
  exports              StudyExport[]

  organizationVersion   OrganizationVersion @relation(fields: [organizationVersionId], references: [id])
  organizationVersionId String              @map("organization_version_id")

  allowedUsers    UserOnStudy[]
  emissionSources StudyEmissionSource[]
  contributors    Contributors[]
  sites           StudySite[]
  flows           Document[]

  emissionFactorVersions StudyEmissionFactorVersion[]

  emissionSourceTags EmissionSourceTag[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("studies")
}

model StudyExport {
  study   Study       @relation(fields: [studyId], references: [id])
  studyId String      @map("study_id")
  type    Export
  control ControlMode

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([studyId, type])
  @@map("study_exports")
}

model UserOnStudy {
  study     Study   @relation(fields: [studyId], references: [id])
  studyId   String  @map("study_id")
  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id")

  role StudyRole

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([studyId, accountId])
  @@map("users_on_study")
}

model Contributors {
  study     Study   @relation(fields: [studyId], references: [id])
  studyId   String  @map("study_id")
  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id")

  subPost SubPost

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([studyId, accountId, subPost])
  @@map("contributors")
}

enum EmissionSourceType {
  Physical
  Accounting
  Extrapolated
  Statistical
  Approched
}

model StudyEmissionSource {
  id      String @id @default(uuid())
  study   Study  @relation(fields: [studyId], references: [id])
  studyId String @map("study_id")

  subPost         SubPost                        @map("sub_post")
  name            String
  tag             String?
  caracterisation EmissionSourceCaracterisation?

  emissionFactorId String?         @map("emission_factor_id")
  emissionFactor   EmissionFactor? @relation(fields: [emissionFactorId], references: [id])

  studySiteId String    @map("study_site_id")
  studySite   StudySite @relation(fields: [studySiteId], references: [id])

  value                        Float?
  reliability                  Int?
  technicalRepresentativeness  Int?                @map("technical_representativeness")
  geographicRepresentativeness Int?                @map("geographic_representativeness")
  temporalRepresentativeness   Int?                @map("temporal_representativeness")
  completeness                 Int?                @map("completeness")
  source                       String?
  type                         EmissionSourceType?
  comment                      String?
  validated                    Boolean?
  recycledPart                 Int?                @map("recycled_part")

  depreciationPeriod Int? @map("depreciation_period")
  duration           Int? @default(20)
  hectare            Int?

  contributorId String?  @map("contributor_account_id")
  contributor   Account? @relation(fields: [contributorId], references: [id])

  feReliability                  Int? @map("fe_reliability")
  feTechnicalRepresentativeness  Int? @map("fe_technical_representativeness")
  feGeographicRepresentativeness Int? @map("fe_geographic_representativeness")
  feTemporalRepresentativeness   Int? @map("fe_temporal_representativeness")
  feCompleteness                 Int? @map("fe_completeness")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  answerEmissionSources AnswerEmissionSource[]

  emissionSourceTags EmissionSourceTag[] @relation("TagToEmissionSource")

  @@map("study_emission_sources")
}

model ExportRule {
  id String @id @default(uuid())

  export  Export
  subPost SubPost                 @map("sub_post")
  type    EmissionFactorPartType?

  // BEGES Controle op√©rationnel
  operated                String?
  notOperated             String? @map("not_operated")
  operatedProcedeed       String? @map("operated_procedeed")
  operatedFugitive        String? @map("operated_fugitive")
  notOperatedSupported    String? @map("not_operated_supported")
  notOperatedNotSupported String? @map("not_operated_not_supported")
  rented                  String?
  finalClient             String? @map("final_client")
  held                    String?
  notHeldSimpleRent       String? @map("not_held_simple_rent")
  notHeldOther            String? @map("not_held_other")
  heldProcedeed           String? @map("held_procedeed")
  heldFugitive            String? @map("held_fugitive")
  notHeldSupported        String? @map("not_held_supported")
  notHeldNotSupported     String? @map("not_held_not_supported")
  usedByIntermediary      String? @map("used_by_intermediary")
  landUse                 String? @map("land_use")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@unique([export, subPost, type])
  @@map("export_rules")
}

model StudyEmissionFactorVersion {
  id String @id @default(uuid())

  studyId String @map("study_id")
  study   Study  @relation(fields: [studyId], references: [id])

  importVersionId String                      @map("import_version_id")
  importVersion   EmissionFactorImportVersion @relation(fields: [importVersionId], references: [id])

  source Import

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@unique([studyId, source])
  @@map("study_emission_factor_versions")
}

model StudySite {
  id String @id @default(uuid())

  studyId String @map("study_id")
  study   Study  @relation(fields: [studyId], references: [id])

  siteId String @map("site_id")
  site   Site   @relation(fields: [siteId], references: [id])

  etp                 Int
  ca                  Float
  StudyEmissionSource StudyEmissionSource[]

  volunteerNumber   Int?           @map("volunteer_number")
  beneficiaryNumber Int?           @map("beneficiary_number")
  numberOfSessions  Int?
  numberOfTickets   Int?
  numberOfOpenDays  Int?
  distanceToParis   Int?
  openingHours      OpeningHours[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  studyAnswers Answer[]

  @@unique([studyId, siteId])
  @@map("study_sites")
}
