import { Unit } from '@prisma/client'

function defineUnitGroup<T extends readonly Unit[]>(group: T): T {
  return group
}

export const UNIT_GROUPS: { [x: string]: Partial<Unit[]> } = {
  CUT: defineUnitGroup([Unit.MOVIES, Unit.PERSON]),
  BC: [
    Unit.A4_SHEET_100,
    Unit.KM_100,
    Unit.ACTIVE,
    Unit.APPAREL,
    Unit.RACE_KM,
    Unit.EURO_SPENT,
    Unit.FRANC_CFP,
    Unit.GJ_PCI,
    Unit.GJ_PCS,
    Unit.HA,
    Unit.HA_YEAR,
    Unit.HA_CLEMENTINE,
    Unit.HOUR,
    Unit.KEURO,
    Unit.KEURO_2019_HT,
    Unit.KEURO_2020_HT,
    Unit.KEURO_2021_HT,
    Unit.KEURO_2022_HT,
    Unit.KEURO_2023_HT,
    Unit.KG_BIOGNC,
    Unit.KG_NITROGEN_SPREAD,
    Unit.KG_DCO_REMOVED,
    Unit.KG_BIOWASTE,
    Unit.KG_SOFT_WHEAT_15,
    Unit.KG_TREATED_LEATHER,
    Unit.KG_FABA_BEAN_15,
    Unit.KG_GREEN_COFFEE_BEANS_NO_PULP,
    Unit.KG_RAPESEED_9,
    Unit.KG_WOOL,
    Unit.KG_MILK,
    Unit.KG_CORN_28,
    Unit.KG_ACTIVE_MATERIAL,
    Unit.KG_RAW_MATERIAL,
    Unit.KG_RAW_MATERIAL_12,
    Unit.KG_RAW_MATERIAL_15,
    Unit.KG_RAW_MATERIAL_74,
    Unit.KG_RAW_MATERIAL_80,
    Unit.KG_RAW_MATERIAL_9,
    Unit.KG_RAW_MATERIAL_16_SUGAR,
    Unit.KG_RAW_MATERIAL_NO_PULP,
    Unit.KG_DRY_MATTER,
    Unit.KG_NET_WEIGHT,
    Unit.KG_LIVE_WEIGHT,
    Unit.KG_LIVE_WEIGHT_CAT_0,
    Unit.KG_LIVE_WEIGHT_CAT_1,
    Unit.KG_LIVE_WEIGHT_CAT_2,
    Unit.KG_LIVE_WEIGHT_CAT_3,
    Unit.KG_SPRING_PEAS_15,
    Unit.KG_POTATO_80,
    Unit.KG_STARCH_POTATO_74,
    Unit.KG_TRITICALE_15,
    Unit.KG_NET_COMMERCIALLY_VIABLE_MEAT,
    Unit.KG_PASTURED_GRASS_80,
    Unit.KG_INGREDIENT_EXIT_STORE_NET_WEIGHT,
    Unit.KG_INGREDIENT_EXIT_STORE_NET_WEIGHT_GR,
    Unit.KG_INGREDIENT_EXIT_STORE_NET_WEIGHT_GRAINS,
    Unit.KG_INGESTED_INGREDIENT,
    Unit.KG_EGG,
    Unit.KG_EGG_CAT_0,
    Unit.KG_EGG_CAT_1,
    Unit.KG_EGG_CAT_2,
    Unit.KG_EGG_CAT_3,
    Unit.KG_BREWING_BARLEY_15,
    Unit.KG_FEED_BARLEY_15,
    Unit.KGH2,
    Unit.KG_MILK_LIQUID,
    Unit.KG_NTK,
    Unit.KM_PERSON,
    Unit.KWH_PCI,
    Unit.KWH_PCS,
    Unit.LITER_LIQUID,
    Unit.POUND,
    Unit.M2_SHON,
    Unit.M3_KM,
    Unit.M3_N,
    Unit.METER_ROAD,
    Unit.MJ_PCI,
    Unit.ML,
    Unit.M2_WALL,
    Unit.M2_FLOOR,
    Unit.M2_ROOF,
    Unit.PASSENGER_KM,
    Unit.PEQ_KM,
    Unit.PERSON_MONTH,
    Unit.UNIT_PIECE_SHRUB_POT,
    Unit.UNIT_PIECE_SHRUB_POT_3L,
    Unit.UNIT_PIECE_GRAFT,
    Unit.UNIT_PIECE_STEM,
    Unit.PORTION,
    Unit.T,
    Unit.TEP,
    Unit.TEP_PCI,
    Unit.TEP_PCS,
    Unit.TON_KM,
    Unit.TON,
    Unit.TON_WITH_BONES,
    Unit.TON_RAW,
    Unit.TON_COLLECTED,
    Unit.TON_CLINKER,
    Unit.TON_WASTE,
    Unit.TON_K2O,
    Unit.TON_DRY_MATTER,
    Unit.TON_N,
    Unit.TON_P2O5,
    Unit.TON_VIABLE_MEAT,
    Unit.TON_KM_PRODUCED,
    Unit.TON_PRODUCTED,
    Unit.TON_PROCESSED,
    Unit.IMPORTED_UNIT_PIECE_SHRUB_POT,
    Unit.VEHICLE_YEAR,
    Unit.VEHICLE_KM,
    Unit.CAR_KM,
    Unit.PERCENT,
    Unit.GJ_PER_TON,
    Unit.TON_KM_ROAD_PER_PERSON_YEAR,
    Unit.KG_FLUID,
    Unit.KWH_PER_HOME_YEAR,
    Unit.KM_PER_PERSON_YEAR,
    Unit.KGN_PER_HA,
    Unit.KWH_PER_M2_YEAR,
    Unit.GWH,
    Unit.KG_FLUID_PER_KW_FRIDGE,
    Unit.KG_FLUID_PER_m2,
    Unit.KG_FLUID_PER_EQUIPMENT,
    Unit.KG_FLUID_PER_STORAGE_M3,
    Unit.KWH_PER_HOUSING_YEAR,
    Unit.PERCENT_APPARTMENTS,
    Unit.PERCENT_HOUSES,
    Unit.LITER_PER_HA,
    Unit.MJ_PER_HA,
    Unit.KWH_PER_PERSON_FLOOR_YEAR,
    Unit.PLANT,
    Unit.KG_PER_m3,
    Unit.KGDBO,
    Unit.KGDBO_PER_M3,
    Unit.KG_H2_PER_100KM,
    Unit.REQUEST,
    Unit.MAIL,
    Unit.DOLLAR,
    Unit.JPY,
    Unit.CNY,
    Unit.CUSTOM,
  ],
  COMMON: [
    Unit.UNIT,
    Unit.M2,
    Unit.DAY,
    Unit.KM,
    Unit.KWH,
    Unit.M3,
    Unit.LITER,
    Unit.EURO,
    Unit.YEAR,
    Unit.MEAL,
    Unit.METER,
    Unit.GO,
    Unit.KG,
  ],
}

export const UNITS_BY_ENV = {
  CUT: [...UNIT_GROUPS.CUT, ...UNIT_GROUPS.COMMON],
  BC: [...UNIT_GROUPS.BC, ...UNIT_GROUPS.COMMON],
} as const

export type UnitForCut = (typeof UNITS_BY_ENV.CUT)[number]
export type UnitForBC = (typeof UNITS_BY_ENV.BC)[number]
