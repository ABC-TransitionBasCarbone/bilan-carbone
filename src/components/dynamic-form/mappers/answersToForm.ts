import { Answer, Question } from '@prisma/client'
import { FormValues } from '../types/formTypes'

export const answersToFormValues = (questions: Question[], answers?: Answer[]): FormValues => {
  const formValues: FormValues = {}

  questions.forEach((question) => {
    const answer = answers?.find((a) => a.questionId === question.id)

    if (answer && answer.response) {
      formValues[question.idIntern] = answer.response
    } else {
      formValues[question.idIntern] = null
    }
  })

  return formValues
}

export const getAnswerForQuestion = (question: Question, answers: Answer[]): Answer | undefined => {
  return answers.find((a) => a.questionId === question.id)
}

export const getFormValueForQuestion = (question: Question, formValues: FormValues): unknown => {
  return formValues[question.idIntern]
}

export const updateAnswerWithFormValue = (existingAnswer: Answer, newValue: unknown, question: Question): Answer => {
  return {
    ...existingAnswer,
    response: newValue,
  }
}

export const createAnswerFromFormValue = (value: unknown, question: Question, studyId: string): Answer => {
  return {
    id: '', // Will be generated by server
    questionId: question.id,
    studyId,
    response: value,
  }
}
